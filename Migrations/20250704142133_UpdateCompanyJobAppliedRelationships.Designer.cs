// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizManager.Data;

#nullable disable

namespace QuizManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250704142133_UpdateCompanyJobAppliedRelationships")]
    partial class UpdateCompanyJobAppliedRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuizManager.Models.AnnouncementAsCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("CompanyAnnouncementAttachmentFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyAnnouncementCompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAnnouncementCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAnnouncementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyAnnouncementRNG")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyAnnouncementRNG_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAnnouncementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyAnnouncementTimeToBeActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyAnnouncementTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyAnnouncementUploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AnnouncementsAsCompany");
                });

            modelBuilder.Entity("QuizManager.Models.AnnouncementAsProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ProfessorAnnouncementAttachmentFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfessorAnnouncementDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorAnnouncementProfessorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorAnnouncementProfessorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorAnnouncementProfessorSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfessorAnnouncementRNG")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfessorAnnouncementRNG_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorAnnouncementStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorAnnouncementTimeToBeActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorAnnouncementTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorAnnouncementUploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AnnouncementsAsProfessor");
                });

            modelBuilder.Entity("QuizManager.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaSubFields")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("QuizManager.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AskForExperience")
                        .HasColumnType("bit");

                    b.Property<string>("AtlasID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompanEmployeesLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CompanyAcceptRules")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCEOName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCEOSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCEOTaxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDesiredSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyEmployees")
                        .HasColumnType("int");

                    b.Property<string>("CompanyExportCountries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompanyExportCountriesLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyExportCountriesNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompanyExportCountriesNumberLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyHREmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameENG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyPC")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyPresentationEmbeddedVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRegions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyTaxID")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyTaxOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CompanyTurnover")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CompanyTurnoverLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CompanyVisibleActivity")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteAnnouncements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteJobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_UniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SvseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SvseID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CompanyEventActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyEventAreasOfInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyEventAttachmentFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyEventCompanyDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventCompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyEventCompanyLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyEventCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventDimosLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CompanyEventOfferingTransportToEventLocation")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyEventOtherOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CompanyEventOtherOrganizerToBeVisible")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyEventPerifereiaLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventPlaceLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventPostalCodeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventResponsiblePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventResponsiblePersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventResponsiblePersonTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStartingPointLocationToTransportPeopleToEvent1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStartingPointLocationToTransportPeopleToEvent2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStartingPointLocationToTransportPeopleToEvent3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("CompanyEventTime")
                        .HasColumnType("time");

                    b.Property<string>("CompanyEventTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyEventUploadedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForEventUploadedAsCompany")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForEventUploadedAsCompany_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyEvents");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyInternship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CompanyInternshipActivePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyInternshipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyInternshipAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyInternshipContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipContactTelephonePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipDimosLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipEKPASupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipESPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyInternshipFinishEstimation")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyInternshipForeas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyInternshipLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyInternshipPerifereiaLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipPostalCodeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyInternshipTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CompanyInternshipTransportOffer")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyInternshipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyInternshipUploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyNameUsedToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyUploadedInternshipStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsedToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForInternshipAppliedInCompanyInternship")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForInternshipAppliedInCompanyInternship_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyInternships");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyNameUploadJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsedToUploadJobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PositionActivePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("PositionAddressLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PositionAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PositionContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionContactTelephonePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PositionDimosLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionForeas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionPerifereiaLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionPostalCodeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PositionTransportOffer")
                        .HasColumnType("bit");

                    b.Property<string>("PositionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForPositionUploaded")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForPositionUploaded_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesUpdated")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CompanyJobs");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyPositionStatusAppliedAtTheCompanySide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPositionStatusAppliedAtTheStudentSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanysEmailWhereStudentAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanysUniqueIDWhereStudentAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeStudentAppliedForCompanyJob")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForCompanyJobApplied")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForCompanyJobAppliedAsStudent_HashedAsUniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentEmailAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUniqueIDAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyJobsApplied");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied_CompanyDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CompanysEmailWhereStudentAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanysUniqueIDWhereStudentAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanysEmailWhereStudentAppliedForCompanyJob");

                    b.ToTable("CompanyJobApplied_CompanyDetails");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied_StudentDetails", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeStudentAppliedForCompanyJob")
                        .HasColumnType("datetime2");

                    b.Property<string>("RNGForCompanyJobAppliedAsStudent_HashedAsUniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentEmailAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentUniqueIDAppliedForCompanyJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentEmailAppliedForCompanyJob");

                    b.ToTable("CompanyJobApplied_StudentDetails");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyThesis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyEmailUsedToUploadThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameUploadedThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisAreasUpload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyThesisAttachmentUpload")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyThesisCompanySupervisorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisContactPersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisContactPersonTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisDescriptionsUploaded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisSkillsNeeded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyThesisStartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyThesisStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyThesisTimesUpdated")
                        .HasColumnType("int");

                    b.Property<string>("CompanyThesisTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompanyThesisUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CompanyThesisUploadDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProfessorInteresetedInCompanyThesis")
                        .HasColumnType("bit");

                    b.Property<string>("IsProfessorInterestedInCompanyThesisStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfDepartmentInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfGeneralFieldOfWorkInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfGeneralSkillsInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfImageInterestedInCompanyThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfLinkedInSiteInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfOrchidProfileInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfPersonalDescriptionInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfPersonalTelephoneInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfPersonalTelephoneVisibilityInterestedInCompanyThesis")
                        .HasColumnType("bit");

                    b.Property<string>("ProfPersonalWebsiteInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfScholarProfileInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfUniversityInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfVahmidaDEPInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfWorkTelephoneInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEmailInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorNameInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnNameInterestedInCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForThesisUploadedAsCompany")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForThesisUploadedAsCompany_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThesisType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyTheses");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyThesisApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyDepartmentAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisStatusAppliedAtTheCompanyByCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyThesisStatusAppliedAtTheCompanyByStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeStudentAppliedForCompanyThesis")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForCompanyThesisApplied")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForCompanyThesisApplied_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentCVAppliedForCompanyThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentEmailAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageAppliedForCompanyThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentNameAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentRegNumberAppliedForCompanyThesis")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneAppliedForCompanyThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisTitleAppliedAtTheCompany")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyThesesApplied");
                });

            modelBuilder.Entity("QuizManager.Models.InterestInCompanyEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyDepartmentShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStatusShowInterestAsStudentAtTheStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStatusShowInterestAtTheCompanyByCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventTitleShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeStudentShowInterestForCompanyEvent")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForCompanyEventShowInterestAsStudent")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForCompanyEventShowInterestAsStudent_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentAreasOfExpertiseInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentDepartmenInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentEmailShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageInterestForCompanyEvent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentKeywordsInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLevelOfDegreeInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLinkedInProfileInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNameShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPermanentAddressInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentPermanentPCInterestForCompanyEvent")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentPermanentRegionInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPermanentTownInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPersonalWebsiteInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudentPhoneVisibilityInterestForCompanyEvent")
                        .HasColumnType("bit");

                    b.Property<long>("StudentRegNumberShowInterestForCompanyEvent")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTransportChosenLocationWhenShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTransportNeedWhenShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUniversityDepartmentInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUniversityInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterestInCompanyEvents");
                });

            modelBuilder.Entity("QuizManager.Models.InterestInCompanyEventAsProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyDepartmentShowInterestAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailShowInterestAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStatusShowInterestAsProfessorAtTheProfessor_InterestInCompanyEventAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventStatusShowInterestAtTheCompanyByCompany_InterestInCompanyEventAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEventTitleShowInterestAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameShowInterestAsProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeProfessorShowInterestForCompanyEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorEmailShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorGeneralFieldOfWorkShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfessorImageInterestForCompanyEvent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfessorLinkedInProfileShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorNameShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorOrchidProfileShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorPersonalDescriptionShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorPersonalTelephoneShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorPersonalWebsiteShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfessorPhoneVisibilityInterestForCompanyEvent")
                        .HasColumnType("bit");

                    b.Property<string>("ProfessorScholarProfileShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnameShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityDepartmentShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorVathmidaDEPInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorWorkTelephoneShowInterestForCompanyEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForCompanyEventShowInterestAsProfessor")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("InterestInCompanyEventsAsProfessor");
                });

            modelBuilder.Entity("QuizManager.Models.InterestInProfessorEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTimeStudentShowInterestForProfessorEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorEmailShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStatusShowInterestAsStudentAtTheStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStatusShowInterestAtTheProfessorByProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventTitleShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorNameShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnameShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityDepartmentShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityShowInterestAsStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForProfessorEventShowInterestAsStudent")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForProfessorEventShowInterestAsStudent_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentAreasOfExpertiseInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentDepartmenInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentEmailShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageInterestForProfessorEvent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentKeywordsInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLevelOfDegreeInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLinkedInProfileInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNameShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPermanentAddressInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentPermanentPCInterestForProfessorEvent")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentPermanentRegionInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPermanentTownInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPersonalWebsiteInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudentPhoneVisibilityInterestForProfessorEvent")
                        .HasColumnType("bit");

                    b.Property<long>("StudentRegNumberShowInterestForProfessorEvent")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTransportChosenLocationWhenShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTransportNeedWhenShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUniversityDepartmentInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentUniversityInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterestInProfessorEvents");
                });

            modelBuilder.Entity("QuizManager.Models.InterestInProfessorEventAsCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyActivityShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminEmailInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminNameInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminSurnameInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAdminTelephoneInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAreasInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountryShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescriptionInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHREmailInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRNameInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRSurnameInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRTelephoneInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLocationShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyLogoInterestForProfessorEvent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyNameShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumberOfPeopleToShowUpWhenShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPermanentPCInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CompanyPhoneVisibilityInterestForProfessorEvent")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyRegionsInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortNameShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTelephoneShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTownInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTransportNeedWhenShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTypeShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteShowInterestForProfessorEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeCompanyShowInterestForProfessorEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorEmailShowInterestForHisEventAsAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStatusShowInterestAsCompanyAtTheCompany_InterestInProfessorEventAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStatusShowInterestAtTheProfessorByProfessor_InterestInProfessorEventAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventTitleShowInterestAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorNameShowInterestForHisEventAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnameShowInterestForHisEventAsCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForProfessorEventShowInterestAsCompany")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("InterestInProfessorEventsAsCompany");
                });

            modelBuilder.Entity("QuizManager.Models.InternshipApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTimeStudentAppliedForInternship")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternshipPositionInCompanyApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternshipPositionTypeApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternshipStatusAppliedAtTheCompanyByCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternshipStatusAppliedAtTheCompanyByStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternsnipTitleAppliedAtTheCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForInternshipApplied")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForInternshipApplied_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentCVAppliedForInternship")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentEmailAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageAppliedForInternship")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentNameAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentRegNumberAppliedForInternship")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InternshipsApplied");
                });

            modelBuilder.Entity("QuizManager.Models.PlatformActions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime_PerformedAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForWhat_PerformedAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPositionRNG_PerformedAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfAction_PerformedAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole_PerformedAction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformActions");
                });

            modelBuilder.Entity("QuizManager.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ProfCVAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfCourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfGeneralFieldOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfGeneralSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfLinkedInSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfOrchidProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfPersonalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfPersonalTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfPersonalTelephoneVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("ProfPersonalWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfRegistryNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfScholarProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfUniversity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfVahmidaDEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfWorkTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Professor_UniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("QuizManager.Models.ProfessorEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ProfessorEventActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorEventAreasOfInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfessorEventAttachmentFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfessorEventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventDimosLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProfessorEventOfferingTransportToEventLocation")
                        .HasColumnType("bit");

                    b.Property<string>("ProfessorEventOtherOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfessorEventOtherOrganizerToBeVisible")
                        .HasColumnType("bit");

                    b.Property<string>("ProfessorEventPerifereiaLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventPlaceLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventPostalCodeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventProfessorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfessorEventProfessorImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfessorEventProfessorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventProfessorSurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventResponsiblePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventResponsiblePersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventResponsiblePersonTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStartingPointLocationToTransportPeopleToEvent1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStartingPointLocationToTransportPeopleToEvent2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStartingPointLocationToTransportPeopleToEvent3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ProfessorEventTime")
                        .HasColumnType("time");

                    b.Property<string>("ProfessorEventTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventUniversity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEventUniversityDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorEventUploadedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForEventUploadedAsProfessor")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForEventUploadedAsProfessor_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessorEvents");
                });

            modelBuilder.Entity("QuizManager.Models.ProfessorInternship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmailUsedToUploadProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfVahmidaDEPToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorInternshipActivePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorInternshipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfessorInternshipAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfessorInternshipContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipContactTelephonePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipDimosLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipEKPASupervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipESPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorInternshipFinishEstimation")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorInternshipForeas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorInternshipLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorInternshipPerifereiaLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipPostalCodeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfessorInternshipTransportOffer")
                        .HasColumnType("bit");

                    b.Property<string>("ProfessorInternshipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProfessorInternshipUploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorNameUsedToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorProfGeneralFieldOfWorkToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnameUsedToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityDepartmentToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUniversityToUploadInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorUploadedInternshipStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForInternshipAppliedInProfessorInternship")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForInternshipAppliedInProfessorInternship_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessorInternships");
                });

            modelBuilder.Entity("QuizManager.Models.ProfessorInternshipApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTimeStudentAppliedForProfessorInternship")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternshipStatusAppliedAtTheProfessorByProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternshipStatusAppliedAtTheProfessorByStudent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternsnipTitleAppliedAtTheProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEmailAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorInternshipPositionTypeApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorNameAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnameAppliedForInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForProfessorInternshipApplied")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForProfessorInternshipApplied_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentCVAppliedForProfessorInternship")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentEmailAppliedForProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageAppliedForProfessorInternship")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentNameAppliedForProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentRegNumberAppliedForProfessorInternship")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearAppliedForProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameAppliedForProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneAppliedForProfessorInternship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessorInternshipsApplied");
                });

            modelBuilder.Entity("QuizManager.Models.ProfessorThesis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyActivityInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAreasInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountryInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescriptionInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDesiredSkillsInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmailInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHREmailInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRNameInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRSurnameInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyHRTelephoneInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyLocationInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CompanyLogoInterestedInProfessorThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyNameENGInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CompanyPCInterestedInProfessorThesis")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyRegionsInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTelephoneInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTownInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTypeInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteAnnouncementsInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsiteJobsInterestedInProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUsedToUploadThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompanyInteresetedInProfessorThesis")
                        .HasColumnType("bit");

                    b.Property<string>("IsCompanyInterestedInProfessorThesisStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurnname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForThesisUploaded")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForThesisUploaded_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThesisActivePeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThesisAreas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ThesisAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ThesisDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThesisTimesUpdated")
                        .HasColumnType("int");

                    b.Property<string>("ThesisTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThesisType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThesisUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThesisUploadDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProfessorTheses");
                });

            modelBuilder.Entity("QuizManager.Models.ProfessorThesisApplied", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTimeStudentAppliedForProfessorThesis")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfessorAppliedForThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorEmailAppliedForThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorThesisStatusApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorThesisStatusAppliedAtTheProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorThesisTypeApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RNGForProfessorThesisApplied")
                        .HasColumnType("bigint");

                    b.Property<string>("RNGForProfessorThesisApplied_HashedAsUniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentCVAppliedForProfessorThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentEmailAppliedForProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StudentImageAppliedForProfessorThesis")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentNameAppliedForProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentRegNumberAppliedForProfessorThesis")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentStudyYearAppliedForProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurnameAppliedForProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentTelephoneAppliedForProfessorThesis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisInProfessorApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisTitleAppliedAtTheProfessor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessorThesesApplied");
                });

            modelBuilder.Entity("QuizManager.Models.ResearchGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ResearchGroupContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupFEK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ResearchGroupImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ResearchGroupLab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupPostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupTelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupUniversity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroupUniversityDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchGroup_UniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResearchGroups");
                });

            modelBuilder.Entity("QuizManager.Models.ResearchGroup_NonFacultyMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfRegistrationOnResearchGroup_ForNonFacultyMember")
                        .HasColumnType("datetime2");

                    b.Property<string>("PK_NonFacultyMemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_NonFacultyMemberLevelOfStudies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResearchGroup_NonFacultyMembers");
                });

            modelBuilder.Entity("QuizManager.Models.ResearchGroup_Professors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfRegistrationOnResearchGroup_ForProfessorMember")
                        .HasColumnType("datetime2");

                    b.Property<string>("PK_ProfessorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ProfessorRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResearchGroup_Professors");
                });

            modelBuilder.Entity("QuizManager.Models.ResearchGroup_Publications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PK_ResearchGroupEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_Authors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_CitedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_Journal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PK_ResearchGroupMemberPublication_Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResearchGroup_Publications");
                });

            modelBuilder.Entity("QuizManager.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("QuizManager.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AreasOfExpertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Attachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("CompletedECTS")
                        .HasColumnType("int");

                    b.Property<byte[]>("CoverLetter")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Databases")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrollmentDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedGraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Grades")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("HasFinishedStudies")
                        .HasColumnType("bit");

                    b.Property<bool>("HomeVisibility")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("InternshipStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastCVUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastProfileUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LevelOfDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MachineLearning")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NetworksAndTelecom")
                        .HasColumnType("bit");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PermanentPC")
                        .HasColumnType("bigint");

                    b.Property<string>("PermanentRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("PreferedRegions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredTowns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreferredTownsBoolean")
                        .HasColumnType("bit");

                    b.Property<bool>("Programming")
                        .HasColumnType("bit");

                    b.Property<long>("RegNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("SelfAssesmentAreas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfAssesmentSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_UniqueID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAreas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetSkills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TechnicalSkills")
                        .HasColumnType("bit");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Transport")
                        .HasColumnType("bit");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("QuizManager.Models.ThesisApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTimeApplied")
                        .HasColumnType("datetime2");

                    b.Property<long>("RNGForThesisUploaded")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("StudentCV")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("StudentImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentRegNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThesisTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThesisApplications");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied_CompanyDetails", b =>
                {
                    b.HasOne("QuizManager.Models.CompanyJobApplied", "Application")
                        .WithOne("CompanyDetails")
                        .HasForeignKey("QuizManager.Models.CompanyJobApplied_CompanyDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied_StudentDetails", b =>
                {
                    b.HasOne("QuizManager.Models.CompanyJobApplied", "Application")
                        .WithOne("StudentDetails")
                        .HasForeignKey("QuizManager.Models.CompanyJobApplied_StudentDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("QuizManager.Models.CompanyJobApplied", b =>
                {
                    b.Navigation("CompanyDetails")
                        .IsRequired();

                    b.Navigation("StudentDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
